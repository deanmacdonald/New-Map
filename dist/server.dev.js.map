{"version":3,"sources":["server.js"],"names":["require","config","express","helmet","rateLimit","cors","bodyParser","http","compression","app","use","err","req","res","next","console","error","stack","status","send","json","urlencoded","extended","limiter","windowMs","max","maxAge","port","process","env","PORT","createServer","listen","log"],"mappings":";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,UAAU,GAAGN,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,WAAW,GAAGR,OAAO,CAAC,aAAD,CAA3B;;AAEA,IAAMS,GAAG,GAAGP,OAAO,EAAnB;AACAO,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BC,EAAAA,OAAO,CAACC,KAAR,CAAcL,GAAG,CAACM,KAAlB;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB;AACD,CAHD,E,CAKA;;AACAV,GAAG,CAACC,GAAJ,CAAQP,MAAM,EAAd;AACAM,GAAG,CAACC,GAAJ,CAAQL,IAAI,EAAZ;AACAI,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACc,IAAX,EAAR;AACAX,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACe,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAb,GAAG,CAACC,GAAJ,CAAQF,WAAW,EAAnB,E,CAEA;;AACA,IAAMe,OAAO,GAAGnB,SAAS,CAAC;AACxBoB,EAAAA,QAAQ,EAAE,KAAK,EAAL,GAAU,IADI;AACE;AAC1BC,EAAAA,GAAG,EAAE,GAFmB,CAEd;;AAFc,CAAD,CAAzB;AAIAhB,GAAG,CAACC,GAAJ,CAAQa,OAAR,E,CAEA;;AACAd,GAAG,CAACC,GAAJ,CAAQR,OAAO,UAAP,CAAe,QAAf,EAAyB;AAAEwB,EAAAA,MAAM,EAAE;AAAV,CAAzB,CAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACAvB,IAAI,CAACwB,YAAL,CAAkBtB,GAAlB,EAAuBuB,MAAvB,CAA8BL,IAA9B,EAAoC,YAAM;AACxCZ,EAAAA,OAAO,CAACkB,GAAR,qCAAyCN,IAAzC;AACD,CAFD","sourcesContent":["require('dotenv').config();\r\nconst express = require('express');\r\nconst helmet = require('helmet');\r\nconst rateLimit = require('express-rate-limit');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\nconst http = require('http');\r\nconst compression = require('compression');\r\n\r\nconst app = express();\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Something broke!');\r\n});\r\n\r\n// Security middlewares\r\napp.use(helmet());\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Enable compression\r\napp.use(compression());\r\n\r\n// Rate limiting\r\nconst limiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 100, // limit each IP to 100 requests per windowMs\r\n});\r\napp.use(limiter);\r\n\r\n// Serve static files from the 'public' directory with caching\r\napp.use(express.static('public', { maxAge: '1d' }));\r\n\r\nconst port = process.env.PORT || 3000;\r\nhttp.createServer(app).listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});\r\n"],"file":"server.dev.js"}