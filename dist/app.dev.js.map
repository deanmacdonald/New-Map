{"version":3,"sources":["app.js"],"names":["document","addEventListener","initializeMap","map","createMap","addTileLayer","addGeoJsonData","addControls","L","setView","tileLayer","maxZoom","attribution","addTo","geojson","type","features","geometry","coordinates","properties","title","frisbeeIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","geoJSON","pointToLayer","feature","latlng","marker","onEachFeature","layer","bindPopup","fitBounds","getBounds","control","zoom","position","scale","fullscreen","addDirectionsControl","dirControl","onAdd","div","DomUtil","create","innerHTML"],"mappings":";;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8CC,aAA9C;;AAEA,SAASA,aAAT,GAAyB;AACvB,MAAIC,GAAG,GAAGC,SAAS,EAAnB;AACAC,EAAAA,YAAY,CAACF,GAAD,CAAZ;AACAG,EAAAA,cAAc,CAACH,GAAD,CAAd;AACAI,EAAAA,WAAW,CAACJ,GAAD,CAAX;AACD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAOI,CAAC,CAACL,GAAF,CAAM,KAAN,EAAaM,OAAb,CAAqB,CAAC,OAAD,EAAU,CAAC,QAAX,CAArB,EAA2C,EAA3C,CAAP,CADmB,CACoC;AACxD;;AAED,SAASJ,YAAT,CAAsBF,GAAtB,EAA2B;AACzBK,EAAAA,CAAC,CAACE,SAAF,CAAY,oDAAZ,EAAkE;AAChEC,IAAAA,OAAO,EAAE,EADuD;AAEhEC,IAAAA,WAAW,EAAE;AAFmD,GAAlE,EAGGC,KAHH,CAGSV,GAHT;AAID;;AAED,SAASG,cAAT,CAAwBH,GAAxB,EAA6B;AAC3B,MAAMW,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,mBADQ;AAEdC,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAE,SADR;AAEEE,MAAAA,QAAQ,EAAE;AACRF,QAAAA,IAAI,EAAE,OADE;AAERG,QAAAA,WAAW,EAAE,CAAC,CAAC,WAAF,EAAe,UAAf,CAFL,CAEgC;;AAFhC,OAFZ;AAMEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG;AANd,KADQ,EAWR;AACEL,MAAAA,IAAI,EAAE,SADR;AAEEE,MAAAA,QAAQ,EAAE;AACRF,QAAAA,IAAI,EAAE,OADE;AAERG,QAAAA,WAAW,EAAE,CAAC,CAAC,WAAF,EAAe,UAAf,CAFL,CAEgC;;AAFhC,OAFZ;AAMEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG;AANd,KAXQ,EAqBR;AACEL,MAAAA,IAAI,EAAE,SADR;AAEEE,MAAAA,QAAQ,EAAE;AACRF,QAAAA,IAAI,EAAE,OADE;AAERG,QAAAA,WAAW,EAAE,CAAC,CAAC,WAAF,EAAe,UAAf,CAFL,CAEgC;;AAFhC,OAFZ;AAMEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG;AANd,KArBQ,EA+BR;AACEL,MAAAA,IAAI,EAAE,SADR;AAEEE,MAAAA,QAAQ,EAAE;AACRF,QAAAA,IAAI,EAAE,OADE;AAERG,QAAAA,WAAW,EAAE,CAAC,CAAC,WAAF,EAAe,UAAf,CAFL,CAEgC;;AAFhC,OAFZ;AAMEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG;AANd,KA/BQ;AAFI,GAAhB;AA8CA,MAAMC,WAAW,GAAGb,CAAC,CAACc,IAAF,CAAO;AACzBC,IAAAA,OAAO,EAAE,6CADgB;AAEzBC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFe;AAGzBC,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAHa;AAIzBC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAJY,GAAP,CAApB;AAOAlB,EAAAA,CAAC,CAACmB,OAAF,CAAUb,OAAV,EAAmB;AACjBc,IAAAA,YAAY,EAAE,sBAACC,OAAD,EAAUC,MAAV;AAAA,aAAqBtB,CAAC,CAACuB,MAAF,CAASD,MAAT,EAAiB;AAAER,QAAAA,IAAI,EAAED;AAAR,OAAjB,CAArB;AAAA,KADG;AAEjBW,IAAAA,aAAa,EAAE,uBAACH,OAAD,EAAUI,KAAV,EAAoB;AACjC,UAAIJ,OAAO,CAACV,UAAR,IAAsBU,OAAO,CAACV,UAAR,CAAmBC,KAA7C,EAAoD;AAClDa,QAAAA,KAAK,CAACC,SAAN,CAAgBL,OAAO,CAACV,UAAR,CAAmBC,KAAnC;AACD;AACF;AANgB,GAAnB,EAOGP,KAPH,CAOSV,GAPT;AASAA,EAAAA,GAAG,CAACgC,SAAJ,CAAc3B,CAAC,CAACmB,OAAF,CAAUb,OAAV,EAAmBsB,SAAnB,EAAd;AACD;;AAED,SAAS7B,WAAT,CAAqBJ,GAArB,EAA0B;AACxBK,EAAAA,CAAC,CAAC6B,OAAF,CAAUC,IAAV,CAAe;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAf,EAAyC1B,KAAzC,CAA+CV,GAA/C;AACAK,EAAAA,CAAC,CAAC6B,OAAF,CAAUG,KAAV,GAAkB3B,KAAlB,CAAwBV,GAAxB;AACAK,EAAAA,CAAC,CAAC6B,OAAF,CAAUI,UAAV,CAAqB;AAAEF,IAAAA,QAAQ,EAAE;AAAZ,GAArB,EAA+C1B,KAA/C,CAAqDV,GAArD;AAEAuC,EAAAA,oBAAoB,CAACvC,GAAD,CAApB;AACD;;AAED,SAASuC,oBAAT,CAA8BvC,GAA9B,EAAmC;AACjC,MAAMwC,UAAU,GAAGnC,CAAC,CAAC6B,OAAF,CAAU;AAAEE,IAAAA,QAAQ,EAAE;AAAZ,GAAV,CAAnB;;AACAI,EAAAA,UAAU,CAACC,KAAX,GAAmB,UAASzC,GAAT,EAAc;AAC/B,QAAM0C,GAAG,GAAGrC,CAAC,CAACsC,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,oDAAxB,CAAZ;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgB,sGAAhB;AACA,WAAOH,GAAP;AACD,GAJD;;AAKAF,EAAAA,UAAU,CAAC9B,KAAX,CAAiBV,GAAjB;AACD","sourcesContent":["document.addEventListener('DOMContentLoaded', initializeMap);\r\n\r\nfunction initializeMap() {\r\n  let map = createMap();\r\n  addTileLayer(map);\r\n  addGeoJsonData(map);\r\n  addControls(map);\r\n}\r\n\r\nfunction createMap() {\r\n  return L.map('map').setView([53.5461, -113.4938], 10); // Centered on Edmonton\r\n}\r\n\r\nfunction addTileLayer(map) {\r\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    maxZoom: 19,\r\n    attribution: 'Â© OpenStreetMap contributors'\r\n  }).addTo(map);\r\n}\r\n\r\nfunction addGeoJsonData(map) {\r\n  const geojson = {\r\n    type: 'FeatureCollection',\r\n    features: [\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.5263186, 53.4560181] // Kaskitayo Park\r\n        },\r\n        properties: {\r\n          title: 'Kaskitayo Park'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.4505800, 53.4681600] // Millwoods Turf Field\r\n        },\r\n        properties: {\r\n          title: 'Millwoods Turf Field'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.4857340, 53.5654030] // Commonwealth Recreation Centre\r\n        },\r\n        properties: {\r\n          title: 'Commonwealth Recreation Centre'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.5263186, 53.5232180] // Foote Field (UofA)\r\n        },\r\n        properties: {\r\n          title: 'Foote Field (UofA)'\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const frisbeeIcon = L.icon({\r\n    iconUrl: 'https://img.icons8.com/hatch/64/frisbee.png',\r\n    iconSize: [32, 32],\r\n    iconAnchor: [16, 32],\r\n    popupAnchor: [0, -32]\r\n  });\r\n\r\n  L.geoJSON(geojson, {\r\n    pointToLayer: (feature, latlng) => L.marker(latlng, { icon: frisbeeIcon }),\r\n    onEachFeature: (feature, layer) => {\r\n      if (feature.properties && feature.properties.title) {\r\n        layer.bindPopup(feature.properties.title);\r\n      }\r\n    }\r\n  }).addTo(map);\r\n\r\n  map.fitBounds(L.geoJSON(geojson).getBounds());\r\n}\r\n\r\nfunction addControls(map) {\r\n  L.control.zoom({ position: 'topright' }).addTo(map);\r\n  L.control.scale().addTo(map);\r\n  L.control.fullscreen({ position: 'topright' }).addTo(map);\r\n\r\n  addDirectionsControl(map);\r\n}\r\n\r\nfunction addDirectionsControl(map) {\r\n  const dirControl = L.control({ position: 'topleft' });\r\n  dirControl.onAdd = function(map) {\r\n    const div = L.DomUtil.create('div', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n    div.innerHTML = '<button class=\"controls\" onclick=\"alert(\\'Directions functionality here!\\')\">Get Directions</button>';\r\n    return div;\r\n  };\r\n  dirControl.addTo(map);\r\n}\r\n\r\n"],"file":"app.dev.js"}