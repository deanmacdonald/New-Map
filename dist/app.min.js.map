{"version":3,"sources":["app.js"],"names":["document","addEventListener","map","createMap","addTileLayer","initializeMap","addGeoJsonData","L","setView","tileLayer","maxZoom","geojson","type","features","geometry","properties","title","frisbeeIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","pointToLayer","marker","latlng","feature","layer","bindPopup","fitBounds","geoJSON","getBounds","addControls","control","zoom","position","addTo","addDirectionsControl","div","DomUtil","create","innerHTML"],"mappings":"aAAAA,SAASC,gBAGP,IAAIC,EAAMC,YADZC,aAASC,GACPC,eAAUH,GACVC,YAAYF,GAGb,SAAAC,YAGC,OAAOI,EAAEL,IAAI,OAAOM,QAAQ,CAAC,SAAU,UAAW,IACnD,SAAAJ,aAAAF,GAGCK,EAAEE,UAAU,qDAAsD,CADpEC,QAASN,GACLK,YAAU,iCACVC,MAAOR,GAGV,SAAAI,eAAAJ,GAGC,IAAMS,EAAU,CADlBC,KAASN,oBACPO,SAAa,CACXD,CACAC,KAAU,UAEND,SAAM,CACNE,KAAU,QACRF,YADQ,EAAA,YAAA,aAIVG,WAAY,CANdC,MAAA,mBAMc,CAIdJ,KAAA,UACEA,SAAM,CACNE,KAAU,QACRF,YADQ,EAAA,UAAA,WAIVG,WAAY,CANdC,MAAA,yBAMc,CAIdJ,KAAA,UACEA,SAAM,CACNE,KAAU,QACRF,YADQ,EAAA,WAAA,YAIVG,WAAY,CANdC,MAAA,mCAMc,CAIdJ,KAAA,UACEA,SAAM,CACNE,KAAU,QACRF,YADQ,EAAA,YAAA,YAIVG,WAAY,CANdC,MAAA,yBAaEC,EAAgBC,EAAAA,KAAK,CACzBC,QAAS,8CACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAIlBC,EAAAA,QAAAA,EAAc,CAAAA,aAAuBC,SAAAA,EAAFC,GAAED,OAAejB,EAAAiB,OAAAC,EAAA,CAAAP,KAAAD,KAAEC,cAAMD,SAAAA,EAAAA,GAA9CS,EAAAX,YAAAW,EAAAX,WAAAC,OADGW,EAAAC,UAAAF,EAAAX,WAAAC,UAIbW,MAAAA,GAEHzB,EAAA2B,UAAAtB,EAAAuB,QAAAnB,GAAAoB,aAIJ,SAAAC,YAAA9B,GAGCK,EAAE0B,QAAQC,KAAK,CAAEC,SAAU,aAAcC,MAAMlC,GADjDK,EAAA0B,QAASD,QAATI,MAA0BlC,GACxBK,EAAE0B,QAAQC,WAAK,CAAAC,SAAA,aAAAC,MAAAlC,GAAAmC,qBAAfnC,GAEuBiC,SAAAA,qBAAUjC,GAAZ,IAA0BkC,EAA/C7B,EAAA0B,QAAA,CAAAE,SAAA,YAEAE,EAAAA,MAAAA,SAAAnC,GACD,IAAAoC,EAAA/B,EAAAgC,QAAAC,OAAA,MAAA,sDAED,OAIIF,EAAIG,UAAY,uGAJXJ,GACwBF,EAAQC,MAAElC,GA/F3CF,SAASC,iBAAiB,mBAAoBI","file":"app.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', initializeMap);\r\n\r\nfunction initializeMap() {\r\n  let map = createMap();\r\n  addTileLayer(map);\r\n  addGeoJsonData(map);\r\n  addControls(map);\r\n}\r\n\r\nfunction createMap() {\r\n  return L.map('map').setView([53.5461, -113.4938], 10); // Centered on Edmonton\r\n}\r\n\r\nfunction addTileLayer(map) {\r\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    maxZoom: 19,\r\n    attribution: 'Â© OpenStreetMap contributors'\r\n  }).addTo(map);\r\n}\r\n\r\nfunction addGeoJsonData(map) {\r\n  const geojson = {\r\n    type: 'FeatureCollection',\r\n    features: [\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.5263186, 53.4560181] // Kaskitayo Park\r\n        },\r\n        properties: {\r\n          title: 'Kaskitayo Park'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.4505800, 53.4681600] // Millwoods Turf Field\r\n        },\r\n        properties: {\r\n          title: 'Millwoods Turf Field'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.4857340, 53.5654030] // Commonwealth Recreation Centre\r\n        },\r\n        properties: {\r\n          title: 'Commonwealth Recreation Centre'\r\n        }\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [-113.5263186, 53.5232180] // Foote Field (UofA)\r\n        },\r\n        properties: {\r\n          title: 'Foote Field (UofA)'\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const frisbeeIcon = L.icon({\r\n    iconUrl: 'https://img.icons8.com/hatch/64/frisbee.png',\r\n    iconSize: [32, 32],\r\n    iconAnchor: [16, 32],\r\n    popupAnchor: [0, -32]\r\n  });\r\n\r\n  L.geoJSON(geojson, {\r\n    pointToLayer: (feature, latlng) => L.marker(latlng, { icon: frisbeeIcon }),\r\n    onEachFeature: (feature, layer) => {\r\n      if (feature.properties && feature.properties.title) {\r\n        layer.bindPopup(feature.properties.title);\r\n      }\r\n    }\r\n  }).addTo(map);\r\n\r\n  map.fitBounds(L.geoJSON(geojson).getBounds());\r\n}\r\n\r\nfunction addControls(map) {\r\n  L.control.zoom({ position: 'topright' }).addTo(map);\r\n  L.control.scale().addTo(map);\r\n  L.control.fullscreen({ position: 'topright' }).addTo(map);\r\n\r\n  addDirectionsControl(map);\r\n}\r\n\r\nfunction addDirectionsControl(map) {\r\n  const dirControl = L.control({ position: 'topleft' });\r\n  dirControl.onAdd = function(map) {\r\n    const div = L.DomUtil.create('div', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n    div.innerHTML = '<button class=\"controls\" onclick=\"alert(\\'Directions functionality here!\\')\">Get Directions</button>';\r\n    return div;\r\n  };\r\n  dirControl.addTo(map);\r\n}\r\n\r\n"]}